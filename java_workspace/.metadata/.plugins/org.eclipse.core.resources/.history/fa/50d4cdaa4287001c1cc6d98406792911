package music;

import java.io.File;
import java.io.IOException;
import java.util.Scanner;

import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.BorderFactory;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.event.AncestorEvent;
import javax.swing.event.AncestorListener;
import javax.swing.plaf.ColorChooserUI;

import org.w3c.dom.css.RGBColor;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;



@SuppressWarnings("serial")
public class MainTest extends JFrame  implements AncestorListener{
   //components variables to the jframe
	JLabel title;
	JTextField number_of_loop;
    JButton play_or_pause,loop,reset,quit;
    Panel panel;
    JLabel container_label;
    JPopupMenu popup;
	Border border = BorderFactory.createLineBorder(Color.green,4);

    //components variables of the file
    Scanner scanner;
    File file;
    AudioInputStream audioStream ;
    Clip clip;
    
    
    //constructors to the main class
	public MainTest() throws LineUnavailableException, IOException, UnsupportedAudioFileException {
		//set the frame attributes
		setVisible(true);
		setLayout(null);
		setResizable(true);
		setSize(800,800);
	
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		//border
		//instatiating objects to the file allan.wav
		scanner =new Scanner(System.in);
		file=new File("allan.wav");
		audioStream = AudioSystem.getAudioInputStream(file); 
	    clip = AudioSystem.getClip();
		clip.open(audioStream);

		
		
		//set the frame components
		title = new JLabel("Simple mp3");
		title.setBounds(300, 0, 300, 20);
		title.setFont(new Font("Lucida Calligraphy",Font.BOLD,20));
		
		//setting up buttons
		play_or_pause = new JButton("play / pause");
		play_or_pause.setBackground(Color.cyan);
		play_or_pause.setBackground(getBackground());
	    play_or_pause.setBounds(300,100,100,50);
		play_or_pause.setFont(new Font("Lucida Calligraphy",Font.BOLD,10));
        play_or_pause.addAncestorListener( this);
		// set  panel
		panel = new Panel();
		
		//set label
//		container_label = new JLabel();
//		container_label.setBounds(0,30,70,600);
//		container_label.setBackground(Color.cyan);
//		container_label.setBorder(border);
//		add items to label container
//		container_label.add(play_or_pause);
		
		
		
		//add items to the frame
	   	 add(play_or_pause);
//		 add(container_label);
         add(title);	
         add(panel);
	}
	
	//event handling in java
//    public void actionPerformed(ActionEvent onclick_event) {
////    	while(!onclick_event.getSource().equals(quit)) {
//    	while(true) {
//			if(onclick_event.getSource().equals(play_or_pause)) {
//				System.out.println("playing");
//				clip.start();
//			}
//			else if (onclick_event.getSource().equals(play_or_pause) ) {
//				clip.stop();
//			}
//			else if (onclick_event.getSource().equals(loop)) {
//				
//				JOptionPane.showMessageDialog(null," please in put the number of time to loop then press loop"," having a problem to loop",JOptionPane.INFORMATION_MESSAGE);
//				
//				
//				clip.loop(3);
//			}
//			
//	    	}

//	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	public static void main(String[] args) throws UnsupportedAudioFileException,IOException,LineUnavailableException{
		MainTest obj  = new MainTest();
	}
	


	@Override
	public void ancestorAdded(AncestorEvent onclick_event) {
		while(!onclick_event.getSource().equals(quit)) {
			if(onclick_event.getSource().equals(play_or_pause)) {
				System.out.println("playing");
				clip.start();
			}
			}
	}

	@Override
	public void ancestorRemoved(AncestorEvent event) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void ancestorMoved(AncestorEvent event) {
		// TODO Auto-generated method stub
		
	}
	



}
